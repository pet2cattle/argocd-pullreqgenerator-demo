apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sgsallowoutgoing
  labels:
    crossplane.io/xrd: sgsallowoutgoing.pet2cattle.com
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: pet2cattle.com/v1alpha1
    kind: SGAllowOutgoing
  resources:
  - name: sg
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: 'xplane SG test'
          vpcId: 'vpc-020341326181a2207'
        providerConfigRef:
          name: 'aws-provider'
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.groupName
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.annotations.crossplane.io/external-name
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.labels.sgname
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.securityGroupID
      toFieldPath: status.sgId
  - name: sg-egress
    base:
      apiVersion: ec2.aws.crossplane.io/v1alpha1
      kind: SecurityGroupRule
      spec:
        forProvider:
          fromPort: 0
          toPort: 0
          protocol: "-1"
          type: 'egress'
          cidrBlocks:
            - '0.0.0.0/0'
        providerConfigRef:
          name: 'aws-provider'
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.securityGroupIdSelector.matchLabels.sgname
    - type: FromCompositeFieldPath
      fromFieldPath: status.sgId
      toFieldPath: spec.forProvider.securityGroupId